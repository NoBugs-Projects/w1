name: Report

on:
  workflow_call:
    inputs:
      parent_run_number:
        required: false
        type: string
      docker_pushed:
        required: false
        type: boolean
        default: false

jobs:
  report:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # 1) –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π (—Å–∫—Ä–∏–ø—Ç—ã, workflow, extract-metrics.sh –∏ —Ç.–ø.)
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) –°–∫–∞—á–∏–≤–∞–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Ç–µ—Å—Ç–æ–≤ –≤ allure-results/ (—Å–ª–∏–≤–∞–µ–º –≤—Å–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã)
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: allure-results
          merge-multiple: true

      # 3) –†–∞–±–æ—á–µ–µ –¥–µ—Ä–µ–≤–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–∞–π—Ç–∞ (–≤–µ—Ç–∫–∞ gh-pages)
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      # 4) –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Java (–Ω—É–∂–Ω–∞ Allure CLI)
      - name: Setup Java (for Allure CLI)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # 5) –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Allure CLI
      - name: Install Allure CLI
        shell: bash
        run: |
          set -euo pipefail
          VER="2.29.0"
          curl -sSL -o "allure-${VER}.tgz" "https://github.com/allure-framework/allure2/releases/download/${VER}/allure-${VER}.tgz"
          sudo tar -zxvf "allure-${VER}.tgz" -C /opt/
          sudo ln -sf "/opt/allure-${VER}/bin/allure" /usr/bin/allure
          allure --version

      # 6) –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ history: –ø–µ—Ä–µ–Ω–æ—Å–∏–º –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–æ—à–ª–æ–≥–æ –ø—Ä–æ–≥–æ–Ω–∞ –≤ allure-results/history (–µ—Å–ª–∏ –µ—Å—Ç—å)
      - name: Prepare Allure history
        shell: bash
        run: |
          set -euo pipefail
          RUN="${{ inputs.parent_run_number }}"
          if [ -z "$RUN" ]; then RUN="${{ github.run_number }}"; fi

          # –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–Ω —Å allure-report/history
          PREV="$(ls -d gh-pages/*/allure-report 2>/dev/null | sed -E 's|gh-pages/([0-9]+)/allure-report|\1|' | grep -E '^[0-9]+$' | sort -n | tail -1 || true)"
          echo "Detected previous run: ${PREV:-<none>}"

          if [ -n "$PREV" ] && [ -d "gh-pages/${PREV}/allure-report/history" ]; then
            mkdir -p allure-results/history
            cp -r gh-pages/${PREV}/allure-report/history/* allure-results/history/ || true
            echo "History copied from gh-pages/${PREV}/allure-report/history -> allure-results/history"
          else
            echo "No previous history found"
          fi

          echo "== allure-results top-level =="
          find allure-results -maxdepth 1 -type f | sort | head -n 50 || true

      # 7) –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Allure –≤ gh-pages/<run>/allure-report
      - name: Generate Allure report to /allure-report/
        shell: bash
        run: |
          set -euo pipefail
          RUN="${{ inputs.parent_run_number }}"
          if [ -z "$RUN" ]; then RUN="${{ github.run_number }}"; fi

          OUT="gh-pages/${RUN}/allure-report"
          mkdir -p "$OUT"
          # –°–æ–±–∏—Ä–∞–µ–º –æ—Ç—á—ë—Ç –∏–∑ allure-results
          allure generate --clean "allure-results" -o "$OUT"

          echo "== Generated tree =="
          find "gh-pages/${RUN}" -maxdepth 2 -print | sort

      # 8) –ö–ª–∞–¥—ë–º Swagger —Ä—è–¥–æ–º: gh-pages/<run>/swagger-coverage-report/index.html
      - name: Add Swagger coverage to published site
        shell: bash
        run: |
          set -euo pipefail
          RUN="${{ inputs.parent_run_number }}"
          if [ -z "$RUN" ]; then RUN="${{ github.run_number }}"; fi

          DEST="gh-pages/${RUN}/swagger-coverage-report"
          mkdir -p "$DEST"
          if [ -f "allure-results/swagger-coverage-report.html" ]; then
            cp "allure-results/swagger-coverage-report.html" "$DEST/index.html"
          else
            echo "No swagger-coverage-report.html found in allure-results/"
            ls -la allure-results || true
          fi

      # 9) (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –±—Ä–µ–Ω–¥–∏–Ω–≥ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ—Ç—Ä–∏–∫ –ø–æ —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–º –ø—É—Ç—è–º
      - name: Copy branding and generate metrics
        shell: bash
        run: |
          set -euo pipefail
          RUN="${{ inputs.parent_run_number }}"
          if [ -z "$RUN" ]; then RUN="${{ github.run_number }}"; fi
          RUN_DIR="gh-pages/${RUN}"
          
          # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –±—Ä–µ–Ω–¥–∏–Ω–≥–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
          [ -f .github/report/logo_icon.png ]     && cp .github/report/logo_icon.png     "$RUN_DIR/" || true
          [ -f .github/report/report_styles.css ] && cp .github/report/report_styles.css "$RUN_DIR/" || true
          
          # –ü—É—Ç–∏ –¥–ª—è —Å–∫—Ä–∏–ø—Ç–∞ –º–µ—Ç—Ä–∏–∫
          ALLURE_DIR="$RUN_DIR/allure-report"
          SWAGGER_DIR="$RUN_DIR/swagger-coverage-report"
          OUT_DIR="$RUN_DIR"
          
          # –ë–∞–∑–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å —Å—Å—ã–ª–æ–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä /w1/23/
          REPO="${GITHUB_REPOSITORY#*/}"   # "w1"
          BASE_PREFIX="/${REPO}/${RUN}/"
          
          if [ -f .github/scripts/extract-metrics.sh ]; then
            chmod +x .github/scripts/extract-metrics.sh || true
            .github/scripts/extract-metrics.sh "$ALLURE_DIR" "$SWAGGER_DIR" "$OUT_DIR" "$BASE_PREFIX"
          else
            echo "extract-metrics.sh not found; skipping metrics"
          fi
          
          # (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –±—ã—Å—Ç—Ä—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≥–æ, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å
          echo "== Result files in ${RUN_DIR} =="
          find "$RUN_DIR" -maxdepth 2 -type f | sort


      # 10) –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞/–ø—Ä–∞–≤–∞, —á—Ç–æ–±—ã git add –Ω–µ —É–ø–∞–ª –∏–∑-–∑–∞ Permission denied
      - name: Normalize ownership and permissions in gh-pages
        shell: bash
        run: |
          set -euo pipefail
          sudo chown -R "$(id -u):$(id -g)" gh-pages
          find gh-pages -type d -exec chmod 755 {} \;
          find gh-pages -type f -exec chmod 644 {} \;
          git config --global --add safe.directory "$GITHUB_WORKSPACE/gh-pages"

      # 11) –ü—É–±–ª–∏–∫—É–µ–º –≤—Å—ë –æ–¥–Ω–∏–º –∫–æ–º–º–∏—Ç–æ–º
      - name: Publish Allure + Swagger + Dashboard (single push)
        shell: bash
        run: |
          set -euo pipefail
          RUN="${{ inputs.parent_run_number }}"
          if [ -z "$RUN" ]; then RUN="${{ github.run_number }}"; fi

          echo "== Preview to publish =="
          find gh-pages -maxdepth 3 -type f | sort | sed -n '1,200p'

          cd gh-pages
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Publish Allure (/allure-report), Swagger and dashboard for run ${RUN}" || echo "Nothing to commit"
          git push

      # 12) Debug metrics and file locations
      - name: Debug metrics and file locations
        if: always()
        run: |
          echo "üîç Debug Information for Run ${{ github.run_number }}:"
          echo "üìÅ Current working directory: $(pwd)"
          echo "üìÅ GitHub workspace: ${{ github.workspace }}"
          echo "üìÅ Run number: ${{ github.run_number }}"
          echo ""
          echo "üìÅ Checking metrics files:"
          echo "   - Main dashboard metrics: $(ls -la gh-pages/metrics.json 2>/dev/null || echo 'NOT FOUND')"
          echo "   - Run-specific metrics: $(ls -la gh-pages/${{ github.run_number }}/metrics.json 2>/dev/null || echo 'NOT FOUND')"
          echo ""
          echo "üìÅ Checking dashboard files:"
          echo "   - Main dashboard: $(ls -la gh-pages/index.html 2>/dev/null || echo 'NOT FOUND')"
          echo "   - Run-specific dashboard: $(ls -la gh-pages/${{ github.run_number }}/index.html 2>/dev/null || echo 'NOT FOUND')"
          echo ""
          echo "üìÅ Directory structure:"
          find gh-pages -name "*.json" -o -name "*.html" | head -20 || echo "No files found"
          echo ""
          if [ -f "gh-pages/metrics.json" ]; then
            echo "‚úÖ Main metrics.json content preview:"
            head -10 gh-pages/metrics.json || echo "Could not read file"
          fi
          if [ -f "gh-pages/${{ github.run_number }}/metrics.json" ]; then
            echo "‚úÖ Run-specific metrics.json content preview:"
            head -10 "gh-pages/${{ github.run_number }}/metrics.json" || echo "Could not read file"
          fi

      # 13) –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
      - name: Send Telegram notification
        if: always()
        env:
          JOB_STATUS: ${{ job.status }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_EVENT_REPOSITORY_NAME: ${{ github.event.repository.name }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PUSHED: ${{ inputs.docker_pushed }}
          TELEGRAM_BOT_TOKEN: "8187716552:AAFFKyxYMSm-sA7lymOXSXubHYDwBThUfm8"
          TELEGRAM_CHAT_ID: "6068728833"
        run: |
          chmod +x .github/scripts/send-telegram-notification.sh
          ./.github/scripts/send-telegram-notification.sh
